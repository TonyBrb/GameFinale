// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace GameFinale.Models
{
    public partial class EcommerceContext : DbContext
    {
        public EcommerceContext()
        {
        }

        public EcommerceContext(DbContextOptions<EcommerceContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Carrello> Carrellos { get; set; }
        public virtual DbSet<Negozio> Negozios { get; set; }
        public virtual DbSet<Prodotto> Prodottos { get; set; }
        public virtual DbSet<Utente> Utentes { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Carrello>(entity =>
            {
                entity.HasKey(e => e.IdCarrello);

                entity.ToTable("Carrello");

                entity.Property(e => e.IdCarrello)
                    .ValueGeneratedNever()
                    .HasColumnName("id_carrello");

                entity.Property(e => e.IdProdotto).HasColumnName("id_prodotto");

                entity.Property(e => e.Prezzo)
                    .HasMaxLength(10)
                    .HasColumnName("prezzo")
                    .IsFixedLength();

                entity.Property(e => e.QuantitaTotale).HasColumnName("quantita_totale");

                entity.HasOne(d => d.IdProdottoNavigation)
                    .WithMany(p => p.Carrellos)
                    .HasForeignKey(d => d.IdProdotto)
                    .HasConstraintName("FK_Carrello_prodotto");
            });

            modelBuilder.Entity<Negozio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Negozio");

                entity.Property(e => e.IdNegozio).HasColumnName("id_negozio");

                entity.Property(e => e.IdProdotto).HasColumnName("id_prodotto");

                entity.Property(e => e.NomeProdotto)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nome_prodotto");

                entity.HasOne(d => d.IdProdottoNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.IdProdotto)
                    .HasConstraintName("FK_negozio_prodotto");
            });

            modelBuilder.Entity<Prodotto>(entity =>
            {
                entity.HasKey(e => e.IdProdotto);

                entity.ToTable("Prodotto");

                entity.Property(e => e.IdProdotto)
                    .ValueGeneratedNever()
                    .HasColumnName("id_prodotto");

                entity.Property(e => e.Nome)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nome");

                entity.Property(e => e.Prezzo).HasColumnName("prezzo");

                entity.Property(e => e.Quantita).HasColumnName("quantita");
            });

            modelBuilder.Entity<Utente>(entity =>
            {
                entity.HasKey(e => e.IdUtente);

                entity.ToTable("Utente");

                entity.Property(e => e.IdUtente)
                    .ValueGeneratedNever()
                    .HasColumnName("id_utente");

                entity.Property(e => e.IdCarrello).HasColumnName("id_carrello");

                entity.Property(e => e.NomeUtente)
                    .HasMaxLength(10)
                    .HasColumnName("nome_utente")
                    .IsFixedLength();

                entity.HasOne(d => d.IdCarrelloNavigation)
                    .WithMany(p => p.Utentes)
                    .HasForeignKey(d => d.IdCarrello)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Utente_carrello");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}